#include "../../imports/stdlib.fc";
#include "../../imports/tsa_functions.fc";

global int visited;

() on_compute_phase_exit(int compute_fee, int contract_id) impure method_id {
    visited = visited + contract_id;
}

() on_internal_message_send(int balance, int msg_value, cell in_msg_full, slice msg_body, int input_id) impure method_id {
    tsa_forbid_failures();

    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);
    tsa_assert_not(flags & 1);
    int op = msg_body~load_uint(32);
    tsa_assert(op == 100);
    tsa_allow_failures();
}

() main() impure {
    visited = 0;
    tsa_send_internal_message(1, 0); ;; send msg without bounce flag
    throw_if(400, visited == 1 + 2); ;; contract ids
}
