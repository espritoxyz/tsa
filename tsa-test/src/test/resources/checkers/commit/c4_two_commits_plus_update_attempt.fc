#include "../../imports/stdlib.fc";
#include "../../imports/tsa_functions.fc";

() on_internal_message_send(int balance, int msg_value, cell in_msg_full, slice msg_body, int input_id) impure method_id {

    tsa_forbid_failures();

    int op = msg_body~load_uint(32);
    tsa_assert(op == 204);

    tsa_allow_failures();
}

() main() impure {

    tsa_forbid_failures();

    ;; Initially, the contract has 0 in its number field
    slice ds = tsa_get_c4(1).begin_parse();
    int number_field = ds~load_uint(32);
    ds.end_parse();
    tsa_assert(number_field == 0);

    tsa_allow_failures();

    ;; From here onwards, the code needs fixing. The intended semantics should be the following:
    ;;
    ;; if tsa_send_internal_message(1, 0) produces error code 204, then
    ;; tsa_call_1_0(1, 90) should return 1244 (i.e., two commits occurred that updated the contract state;
    ;; then another update attempt occurred, but since no commit was executed for the third update,
    ;; it was lost once the exception is thrown).

    tsa_send_internal_message(1, 0);

    int number = tsa_call_1_0(1, 90);

    throw_if(256, number == 1244);
}
