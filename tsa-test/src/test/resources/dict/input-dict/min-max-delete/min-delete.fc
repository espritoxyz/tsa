#include "../../../imports/stdlib.fc";

() main() {
    return ();
}

() test(slice in_msg) impure method_id (1) {
    cell init_dict = in_msg~load_dict();
    (int initial, _, int found1) = init_dict.udict_get_nexteq?(64, 0); ;; the minimum
    throw_unless(300, found1);
    (int second, _, int found2) = init_dict.udict_get_next?(64, initial);
    throw_unless(301, found2);
    var (dict', i, _, f) = init_dict.udict_delete_get_min(64);
    throw_unless(400, f); ;; the minimum exists
    throw_unless(401, i == initial);
    (_, _, int found3) = dict'.udict_get_prev?(64, second);
    throw_unless(402, ~ found3); ;; deleted the minimum
    throw(500);
}
