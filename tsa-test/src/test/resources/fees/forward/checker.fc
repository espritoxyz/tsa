#include "../../imports/stdlib.fc";
#include "../../imports/tsa_functions.fc";

() on_internal_message_send(int balance, int msg_value, cell in_msg_full, slice msg_body, int input_id) impure method_id {
    tsa_forbid_failures();
    
    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);
    tsa_assert_not(flags & 1);

    tsa_assert(msg_value >= 10000000000);

    int op = msg_body~load_uint(32);
    if (input_id == 0) {
        tsa_assert(op == 100);
    } elseif (input_id == 1) {
        tsa_assert(op == 300);
    } elseif (input_id == 2) {
        tsa_assert(op == 400);
    } elseif (input_id == 3) {
        tsa_assert(op == 500);
    } elseif (input_id == 4) {
        tsa_assert(op == 600);
    }

    tsa_allow_failures();
}

() on_out_message(cell msg_full, slice msg_body, int receiver_contract_id, int sender_contract_id) impure method_id {
    throw_if(3000, sender_contract_id != 1);
    throw_if(3001, receiver_contract_id != 2);

    ;; load written forward fee
    slice cs = msg_full.begin_parse();
    cs~skip_bits(4); ;; message headers 
    cs~load_msg_addr(); ;; src address
    cs~load_msg_addr(); ;; dest address
    cs~load_grams(); ;; value
    cs~load_grams(); ;; ihr fee
    int fwd_fee = cs~load_grams();
    cs.end_parse();

    int flag = msg_body~load_uint(10);
    if (flag == 0) {
        throw_if(228, fwd_fee != 400000);
    } elseif (flag == 1) {
        throw_if(228, fwd_fee != 523600);
    } elseif (flag == 2) {
        throw_if(228, fwd_fee != 486400);
    } elseif (flag == 3) {
        throw_if(228, fwd_fee != 610800);
    } elseif (flag == 4) {
        throw_if(228, fwd_fee != 613600);
    } 
} 

() main() impure {
    tsa_send_internal_message(1, 0);
    ;; tsa_send_internal_message(1, 1);
    ;; tsa_send_internal_message(1, 2);
    ;; tsa_send_internal_message(1, 3);
    ;; tsa_send_internal_message(1, 4);

    throw(10000); ;; success
}
