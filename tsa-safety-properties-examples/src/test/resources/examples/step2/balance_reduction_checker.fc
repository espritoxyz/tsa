#include "../../imports/stdlib.fc";
#include "../../imports/tsa_functions.fc";
#include "op-codes.fc";

() on_internal_message_send(int balance, int msg_value, cell in_msg_full, slice msg_body, int input_id) impure method_id {
    ;; ensure that we perform not a reduce_balance operation
    int op = msg_body~load_uint(32);
    tsa_assert_not(op == op::reduce_balance);
}

() main() impure {
    tsa_forbid_failures();

    ;; Retrieve the initial balance â€“ call the method `load_balance` with id -42 in the contract with its id 1 (id 0 is used for the checker)
    int initial_balance = tsa_call_1_0(1, -42);

    ;; send a message with not reduce_balance operation
    tsa_send_internal_message(1, 0);

    int new_balance = tsa_call_1_0(1, -42);

    tsa_allow_failures();
    ;; check that the balance can not be reduced using not a reduce_balance operation
    throw_if(256, initial_balance != new_balance);
}
